name: Build and test PR
on:
  workflow_dispatch:
    inputs:
      node_version:
        description: 'Node version'
        type: string
        required: false
        default: '20.x'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        id: build
        uses: ./.github/actions/build
  unit-tests:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ inputs.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
      - name: refresh cache
        id: refresh-cache
        uses: actions/cache@v4
        env:
          cache-name: node-modules
        with:
          path: |
            ~/.cache
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: unit tests
        id: unit-tests
        shell: bash
        run: |
          sudo npm run test:ci
        # continue-on-error: true
        # Replacing the above with if: always()
      - name: upload the artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: npm_unit_test_artifacts
          path: test_results/
      - name: fail the action if the tests failed
        if: ${{ steps.unit-tests.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('Unit tests failed')
  integration-tests:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ inputs.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          name: npm_build_artifacts
      - name: refresh cache
        id: refresh-cache
        uses: actions/cache@v4
        env:
          cache-name: node-modules
        with:
          path: |
            ~/.cache
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Get wiremock
        shell: bash
        run: |
          curl -o wiremock.jar https://repo1.maven.org/maven2/org/wiremock/wiremock-standalone/3.9.1/wiremock-standalone-3.9.1.jar
      - name: Prepare and run integration tests
        id: integration-tests
        shell: bash
        run: |
          nohup java -jar wiremock.jar --port 9091 &
          nohup npm run start-feature &
          sleep 5
          npm run int-test
      - name: upload results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: npm_integration_test_artifacts
          path: |
            integration-tests/videos/
            integration_tests/screenshots/
      - name: fail the action if the tests failed
        if: ${{ steps.integration-tests.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('Integration tests failed')