name: "Build application"
description: "This action builds the application"
runs:
  using: "composite"
  steps:
    - name: Use Node.js ${{ inputs.node_version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node_version }}
    - name: update npm
      shell: bash
      run: |
        sudo npm install -g npm@latest
    - name: refresh cache
      id: initial-cache
      uses: actions/cache@v4
      env:
        cache-name: node-modules
      with:
        path: |
          ~/.cache
          node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: install dependencies
      if: steps.initial-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        npm ci --no-audit
    - name: refresh cache
      id: refresh-cache
      uses: actions/cache@v4
      env:
        cache-name: node-modules
      with:
        path: |
          ~/.cache
          node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: build npm
      shell: bash
      run: |
        npm run build
    - name: Linter check # Run linter after build because the integration test code depend on compiled typescript...
      shell: bash
      run: |
        npm run lint
    - name: upload the artifacts
      uses: actions/upload-artifact@v4
      with:
        name: npm_build_artifacts
        path: |
          node_modules/
          build/
          dist/
          assets/stylesheets/